{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","firstRender","useRef","useState","inputValue","setInputValue","todos","setTodos","useEffect","current","localStorage","setItem","JSON","stringify","getItem","newTodos","parse","className","action","onSubmit","e","preventDefault","trim","text","id","uuidv4","type","name","placeholder","value","onChange","target","map","todo","onClick","filter","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"uOAmEeA,MA/Df,WACE,IAAMC,EAAYC,kBAAO,GACzB,EAAoCC,mBAAS,IAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KACA,EAA0BF,mBAAS,IAAnC,mBAAOG,EAAP,KAAcC,EAAd,KAuCA,OAlBAC,qBAAU,WACHP,EAAYQ,QAEbR,EAAYQ,SAAQ,EAEpBC,aAAaC,QAAQ,OAAOC,KAAKC,UAAL,YAAmBP,OAGnD,CAACA,IAEHE,qBAAU,WACR,GAAkC,OAA/BE,aAAaI,QAAQ,QAAe,CACrC,IAAMC,EAASL,aAAaI,QAAQ,QACpCP,EAASK,KAAKI,MAAL,sBAAeV,GAAf,CAAqBS,SAEhC,IAIA,qBAAKE,UAAU,MAAf,SACE,sBAAKA,UAAU,YAAf,UACE,uBAAMC,OAAO,GAAGC,SAvCR,SAACC,GACbA,EAAEC,iBAEqB,KAApBjB,EAAWkB,SAEdf,EAAS,GAAD,mBAAKD,GAAL,CAAW,CACjBiB,KAAKnB,EACLoB,GAAGC,kBAGPpB,EAAc,MA6BR,UACE,uBAAOqB,KAAK,OAAOC,KAAK,GAAGH,GAAG,GAAGI,YAAY,gBAC7CC,MAAOzB,EACP0B,SAAU,SAACV,GAAD,OAAKf,EAAce,EAAEW,OAAOF,UAEtC,wBAAQH,KAAK,SAAb,oBAEDpB,EAAM0B,KAAI,SAAAC,GAAI,OACb,sBAAmBhB,UAAU,OAA7B,UACE,4BAAIgB,EAAKV,OACT,mBAAGW,QAAS,kBApCJV,EAoCmBS,EAAKT,QAnCxCjB,EAASD,EAAM6B,QAAO,SAAAF,GAAI,OAAEA,EAAKT,KAAKA,MADvB,IAACA,GAoC6BP,UAAU,mBAFvCgB,EAAKT,aC7CVY,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.d4155534.chunk.js","sourcesContent":["import React, {useState,useEffect,useRef} from 'react'\nimport './App.css';\nimport { v4 as uuidv4 } from 'uuid';\n\nfunction App() {\n  const firstRender=useRef(true)\n  const [inputValue, setInputValue] = useState(\"\")\n  const [todos, setTodos] = useState([])\n\n  //setting todos\n  const addTodo=(e)=>{\n    e.preventDefault()\n\n    if(inputValue.trim()===\"\") return;\n\n    setTodos([...todos,{\n      text:inputValue,\n      id:uuidv4()\n    }\n  ])\n  setInputValue(\"\")\n  }\n  //it will print all the todos expect that clicked id\n  const removeTodo=(id)=>{\n    setTodos(todos.filter(todo=>todo.id!==id))\n  }\n\n\n  useEffect(()=>{\n      if(firstRender.current){\n        \n        firstRender.current=false;\n      }else{\n        localStorage.setItem(\"Todo\",JSON.stringify([...todos]))       \n      }\n\n  },[todos])\n\n  useEffect(()=>{\n    if(localStorage.getItem(\"Todo\")!==null){\n      const newTodos=localStorage.getItem(\"Todo\")\n      setTodos(JSON.parse([...todos,newTodos]))\n    }\n  },[])\n\n\n  return (\n    <div className=\"App\">\n      <div className=\"container\">\n        <form action=\"\" onSubmit={addTodo}>\n          <input type=\"text\" name=\"\" id=\"\" placeholder='Add a task...'\n          value={inputValue}\n          onChange={(e)=>setInputValue(e.target.value)}\n          />\n          <button type=\"submit\">Add</button>\n        </form>\n        {todos.map(todo=>(\n          <div key={todo.id} className=\"todo\">\n            <p>{todo.text}</p>\n            <i onClick={()=>removeTodo(todo.id)} className=\"fas fa-trash\"></i>\n          </div>\n        ))}\n      </div>\n    </div>\n  )\n}\n\nexport default App\n\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}